import type * as http from 'http';
export interface UniversalIncomingMessage extends Omit<http.IncomingMessage, 'socket'> {
    /**
     * Many adapters will add a `body` property to the incoming message and pre-parse the body
     */
    body?: unknown;
    /**
     * Socket is not always available in all deployments, so we need to make it optional
     * @see https://github.com/trpc/trpc/issues/6341
     */
    socket?: http.IncomingMessage['socket'];
}
export declare function createURL(req: UniversalIncomingMessage): URL;
/**
 * Convert an [`IncomingMessage`](https://nodejs.org/api/http.html#class-httpincomingmessage) to a [`Request`](https://developer.mozilla.org/en-US/docs/Web/API/Request)
 */
export declare function incomingMessageToRequest(req: UniversalIncomingMessage, res: http.ServerResponse, opts: {
    /**
     * Max body size in bytes. If the body is larger than this, the request will be aborted
     */
    maxBodySize: number | null;
}): Request;
//# sourceMappingURL=incomingMessageToRequest.d.ts.map